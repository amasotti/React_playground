{"version":3,"sources":["components/Button.js","components/Header.js","components/TaskView.js","components/Tasks.js","components/AddTask.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Button","butText","onClick","className","defaultProps","headerStyle","borderRadius","padding","color","backgroundColor","Header","title","text","onAdd","showAdd","style","TaskView","task","onDelete","onToggle","reminder","onDoubleClick","id","border","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","href","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromJson","getTasks","fetch","res","json","data","fetchTask","addTask","console","log","method","headers","body","JSON","stringify","result","deleteTask","filter","toggleRemainder","taskToToggle","updateTask","path","exact","render","props","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73ffbd11.chunk.js","sourcesContent":["/* Button component \r\n\r\ndefines a HTML-button, an onclick method and a custom text, passed as property\r\n\r\n*/\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({butText, onClick}) => {\r\n  return (<button \r\n    className='btn'\r\n    onClick={onClick}>\r\n      {butText}\r\n    </button>)\r\n}\r\n\r\nButton.defaultProps = {\r\n  butText : 'Add'\r\n}\r\n\r\nButton.propTypes = {\r\n  butText : PropTypes.string, // The label must be a string\r\n  onClick : PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","/* Header component */\r\nimport Button from './Button'\r\n//import { useLocation } from 'react-router-dom'\r\n// define style for an element as variable, an alternative to packing style in a css\r\nconst headerStyle = {\r\n  borderRadius : \"10px\",\r\n  padding : \"5px, 10px\",\r\n  color : \"#270b8a\",\r\n  backgroundColor : \"#2ddd8aa1\"\r\n}\r\n\r\n\r\nconst Header = ({title, text, onAdd, showAdd}) => {\r\n  return (\r\n    <div>\r\n    <header className=\"App-header\">\r\n        <h1>Task Tracer</h1>\r\n        <p>Mr. {title}</p>\r\n\r\n        <Button \r\n        butText={showAdd ? 'Close form' : 'Add new task'} \r\n        onClick={onAdd}\r\n        />\r\n\r\n        {// A second paragraph with default style\r\n        }\r\n        <p className=\"things\" style={headerStyle}> {text}</p>\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title : 'hello',\r\n    text : 'Things to do...'\r\n}\r\n\r\nexport default Header","/* This component defines the way in which Tasks are viewed */\r\n\r\nimport { FaTimes } from 'react-icons/fa'; // the delete icon\r\nimport React from 'react'\r\n\r\nconst TaskView = ({task, onDelete, onToggle}) => {\r\n  return (\r\n    <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n      <h3>{task.text} \r\n      <FaTimes \r\n      style={{border: '1px solid', borderRadius : '5px', cursor: 'pointer'}} \r\n      onClick = {() => onDelete(task.id)}/>\r\n\r\n      </h3>\r\n\r\n      <p className='taskDay'>{task.day}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default TaskView\r\n","// Task array\r\nimport TaskView from './TaskView'\r\n\r\n/* \r\nIn principle tasks are defined as shown here below, but\r\nsurely we don't want an app which is able just to deal with 2 or 3 predefined\r\ntasks. We want to use a hook, to be able to dynamically add and delete tasks\r\n\r\nconst tasks = [\r\n  {\r\n    id : 1,\r\n    text: 'Appointment with Mr. John',\r\n    day: 'March, the 23rd 2021',\r\n    reminder : true\r\n  },\r\n  {\r\n    id : 2,\r\n    text: 'Buy new computer',\r\n    day: 'ASAP',\r\n    reminder : false\r\n  },\r\n  {\r\n    id : 3,\r\n    text: 'Phone call with Mrs. Jane',\r\n    day: 'March, the 22nd at 15:30',\r\n    reminder : true\r\n  }\r\n] \r\n\r\nLet's import the hook in the main file App.js \r\n\r\n(in real world apps, we would use an API like redux to get the tasks from other\r\n  components)\r\n*/\r\n\r\n\r\n// The task component\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task, index) => (\r\n        <TaskView key={index} task={task} onDelete = {onDelete} onToggle={onToggle} />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","/* Component responsible for adding new Tasks */\r\n\r\nimport { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  // let's define what the user can pass as params\r\n  const [text, setText] = useState('')\r\n  const [day, setDay] = useState('')\r\n  const [reminder, setReminder] = useState('')\r\n\r\n  // define what happens when the User submits the form\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!text) {\r\n      alert('Please, insert a title for the Task')\r\n      return\r\n    }\r\n\r\n    onAdd({text, day, reminder})\r\n\r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n  }\r\n  return (\r\n    <form className=\"add-task\" onSubmit = {onSubmit}>\r\n      <div className=\"form\">\r\n        <label>Task</label>\r\n        <input type=\"text\" \r\n        placeholder=\"Add new task\"\r\n        value={text}\r\n        onChange = {(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form\">\r\n        <label>When and what?</label>\r\n        <input type=\"text\" \r\n        placeholder=\"Add details\"\r\n        value={day}\r\n        onChange = {(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form\">\r\n        <label>Reminder:</label>\r\n        <input \r\n        id=\"remindercheck\"\r\n        type=\"checkbox\"\r\n        checked={reminder}\r\n        value = {reminder}\r\n        onChange = {(e) => setReminder(e.currentTarget.checked)} \r\n        />\r\n\r\n\r\n        <input type=\"submit\" value=\"Save\" className=\"btn-block\"></input>\r\n      </div>\r\n      \r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default AddTask\r\n","/* Create footer component */\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>Copyright &copy; 2021 -- \r\n\r\n        <a className=\"about\" href=\"https://github.com/amasotti\">  About me</a></p>\r\n    </footer>\r\n  )\r\n}\r\n\r\n\r\nexport default Footer\r\n","import React from 'react'\nimport { useState, useEffect } from'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\n\n\nconst App = () => {\n\n  const [showAddTask, setShowAddTask] = useState(false)\n/* DEFINE SOME DEFAULT TASKS \n\nUseState is defining here the default Tasks */ \nconst [tasks, setTasks] = useState([])\n\nuseEffect(() => {\n  const getTasks = async () => {\n    const tasksFromJson = await fetchTasks()\n    setTasks(tasksFromJson)\n  }\n\n  getTasks()\n}, [])\n\n\n  // Fetch tasks data \n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5500/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n    // Fetch a single task\n    const fetchTask = async (id) => {\n      const res = await fetch(`http://localhost:5500/tasks/${id}`)\n      const data = await res.json()\n  \n      return data\n    }\n\n  //add Task (modified in order to add directly to json)\n  const addTask = async (task) => {\n    console.log(\"Task added: \", task)\n    const result = await fetch(`http://localhost:5500/tasks`, {\n      method : 'POST',\n      headers : {\n        'Content-Type': 'application/json'\n      },\n      body : JSON.stringify(task)\n    })\n    const data = await result.json()\n    setTasks([...tasks, data])\n\n  }\n\n// Delete task function (modified, in order to delete from server)\nconst deleteTask = async (id) => {\n  console.log(\"Deleted item:  \", id)\n  await fetch(`http://localhost:5500/tasks/${id}`, {\n    method: 'DELETE',\n  })\n  //  Update the task view\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n// Toggle reminder (flip the reminder if double click)\nconst toggleRemainder = async (id) =>{\n  const taskToToggle = await fetchTask(id)\n  const updateTask = {...taskToToggle, reminder : !taskToToggle.reminder }\n\n  const result = await fetch(`http://localhost:5500/tasks/${id}`, {\n    method: 'PUT',\n    headers: {'Content-Type': 'application/json'},\n    body : JSON.stringify(updateTask)\n  })\n\n  const  data = await result.json()\n  console.log('Updating task n. ', id)\n  setTasks(\n    tasks.map((task) => \n    task.id === id ? { ...task, reminder:\n       !task.reminder } : task\n  ))\n}\n\n// ACTUAL RETURN FUNCTION\n  return (\n    <Router>\n    <div className=\"App-header\">\n\n      {\n        // Show main page\n      }\n\n      <Header \n      title='Don T. Remember'\n      onAdd = {() => setShowAddTask (!showAddTask)}\n      showAdd = {showAddTask}\n      />\n      {\n        // Add task\n      }\n\n      <Route\n      path = \"/\"\n      exact render = {(props) => (<>{showAddTask && <AddTask onAdd = {addTask} />\n      }</>\n      )}\n      />\n      \n      {\n        // operations on tasks (delete, toggle)\n      }\n      \n      <Route \n      path=\"/\" \n      exact render={(props) => (\n        <>\n        {tasks.length > 0 ? \n      <Tasks \n      tasks={tasks} \n      onDelete={deleteTask} \n      onToggle={toggleRemainder}\n\n      />\n       : \"No tasks to show\"}  \n        \n        \n        </>\n      )} />\n       <Footer />\n    </div>\n    </Router>\n  )\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}